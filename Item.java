/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.food_delivery;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/**
 *
 * @author Aashi
 */
public class Item extends javax.swing.JFrame {
    
    Connection con;
    Statement st;
    PreparedStatement ps;
    ResultSet rs;
    
    String restId;
    String itemName;

    /**
     * Creates new form Item
     */
    public Item() {
        initComponents();
    }
    public Item(String restId, String itemName) {
        initComponents();
        
        this.restId=restId;
        this.itemName=itemName;
        
        
        try{
            Class.forName("oracle.jdbc.OracleDriver");
            //JOptionPane.showMessageDialog(this,"Driver Loaded!");
            try 
            {
                //con = DriverManager.getConnection("jdbc:oracle:thin:@10.6.4.33:1521:orcl",
                //        "cse1054","ssn");
                con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl",
                        "user","pwd!");
                //JOptionPane.showMessageDialog(this,"Connected to Oracle database!");
            }
            catch (SQLException ex) 
            {
                Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE,null, ex);
                JOptionPane.showMessageDialog(this,ex.getMessage());
            }
        }
        catch(ClassNotFoundException ex){
        Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE,null, ex);
        JOptionPane.showMessageDialog(this,ex.getMessage());

        }
        
        setTitle(itemName);
        setHeading(itemName);
        
        getItemDetails(itemName);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        type2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        price = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        editItem = new javax.swing.JButton();
        deleteItem = new javax.swing.JButton();
        back = new javax.swing.JButton();
        heading = new javax.swing.JLabel();
        description = new javax.swing.JTextField();
        type = new javax.swing.JLabel();
        vegetarian = new javax.swing.JLabel();

        jLabel3.setText("Vegetarian:");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Type: ");

        jLabel2.setText("Vegetarian:");

        jLabel4.setText("Price:");

        jLabel5.setText("Description:");

        editItem.setText("Edit Item");
        editItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editItemActionPerformed(evt);
            }
        });

        deleteItem.setBackground(new java.awt.Color(255, 51, 51));
        deleteItem.setForeground(new java.awt.Color(255, 255, 255));
        deleteItem.setText("Delete Item");
        deleteItem.setBorder(null);
        deleteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteItemActionPerformed(evt);
            }
        });

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        heading.setText("ITEM NAME");

        type.setText("type");

        vegetarian.setText("veg");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(editItem)
                .addGap(33, 33, 33)
                .addComponent(deleteItem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(back)
                .addGap(34, 34, 34))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(heading))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(46, 46, 46)
                                .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(description, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(40, 40, 40)
                                .addComponent(type))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(vegetarian)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(heading)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(type))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(vegetarian))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(description, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deleteItem)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(editItem)
                        .addComponent(back)))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setHeading(String itemName){
        heading.setText("ITEM NAME: "+itemName);
    }
    private void getItemDetails(String itemName){

        try{
            String itemDetailsQuery = "SELECT item_id,type,vegetarian from items where item_name='"+itemName+"'";
            System.out.println(itemDetailsQuery);
            st=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);

            rs=st.executeQuery(itemDetailsQuery);
            String itemId="0";
            
            if(rs.next()){
                itemId=rs.getString(1);
                type.setText(rs.getString(2));
                vegetarian.setText(rs.getString(3));
            }
            
            String menuDetailsQuery = "SELECT price,description from menu where item_id='"+itemId+"' and restaurant_id='"+restId+"'";
            System.out.println(menuDetailsQuery);
            st=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);

            rs=st.executeQuery(menuDetailsQuery);
            
            if(rs.next()){
                price.setText(rs.getString(1));
                description.setText(rs.getString(2));
            }
            
            
            
        }catch (SQLException ex) {
        Logger.getLogger(Item.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        
    }
    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        dispose(); // Close the current frame
        ViewMenu viewMenu =new ViewMenu(restId);
        viewMenu.setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    private void editItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editItemActionPerformed
        // TODO add your handling code here:
        try{
            
            String itemIdQuery = "SELECT item_id from items where item_name='"+itemName+"'";
        
            st=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);

            rs=st.executeQuery(itemIdQuery);
            
            
            if(rs.next()){
                String itemId=rs.getString(1);
                String newPrice=price.getText();
                String newDescription=description.getText();

                String updateMenuQuery="update menu set price=?, description=? where item_id=? and restaurant_id=?";
                
                ps=con.prepareStatement(updateMenuQuery);
                ps.setString(1,newPrice);
                ps.setString(2,newDescription);
                ps.setString(3,itemId);
                ps.setString(4,restId);
                System.out.println(ps+"  "+updateMenuQuery);
                ps.executeUpdate();

                JOptionPane.showMessageDialog(this,"Updated :)");
            }
          
        }catch (SQLException ex) {
        Logger.getLogger(Item.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        
        backActionPerformed(evt);
       
    }//GEN-LAST:event_editItemActionPerformed

    private void deleteItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteItemActionPerformed
        // TODO add your handling code here:
        try{
            String itemIdQuery = "SELECT item_id from items where item_name='"+itemName+"'";

            st=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);

            rs=st.executeQuery(itemIdQuery);

            if(rs.next()){
                String itemId=rs.getString(1);
                String deleteFromMenuQuery="delete from menu where item_id=? and restaurant_id=?";
                ps=con.prepareStatement(deleteFromMenuQuery);
                ps.setString(1,itemId);
                ps.setString(2,restId);
                ps.executeUpdate();

                JOptionPane.showMessageDialog(this,"Deleted :)");

            }

        }catch (SQLException ex) {
            Logger.getLogger(Item.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }

        backActionPerformed(evt);
    }//GEN-LAST:event_deleteItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable(){
            public void run() {
            new Item().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton deleteItem;
    private javax.swing.JTextField description;
    private javax.swing.JButton editItem;
    private javax.swing.JLabel heading;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField price;
    private javax.swing.JLabel type;
    private javax.swing.JTextField type2;
    private javax.swing.JLabel vegetarian;
    // End of variables declaration//GEN-END:variables
}
