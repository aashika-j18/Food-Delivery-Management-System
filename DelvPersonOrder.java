/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.food_delivery;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aashi
 */
public class DelvPersonOrder extends javax.swing.JFrame {
    
    Connection con;
    Statement st;
    PreparedStatement ps;
    ResultSet rs;
    
    private String orderId;
    private String d_Id;
    DelvPerson prevframe;
    /**
     * Creates new form DelvPersonOrder
     */
    public DelvPersonOrder() {
        initComponents();
    }
    
    public DelvPersonOrder(DelvPerson prevframe, String orderId, String d_Id) {
        initComponents();
        this.orderId=orderId;
        this.prevframe = prevframe;
        this.d_Id = d_Id;
        
        try{
            Class.forName("oracle.jdbc.OracleDriver");
            //JOptionPane.showMessageDialog(this,"Driver Loaded!");
            try 
            {
                //con = DriverManager.getConnection("jdbc:oracle:thin:@10.6.4.33:1521:orcl",
                //        "cse1054","ssn");
                con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl",
                        "user","pwd!");
                //JOptionPane.showMessageDialog(this,"Connected to Oracle database!");
            }
            catch (SQLException ex) 
            {
                Logger.getLogger(DelvPersonOrder.class.getName()).log(Level.SEVERE,null, ex);
                JOptionPane.showMessageDialog(this,ex.getMessage());
            }
        }
        catch(ClassNotFoundException ex){
        Logger.getLogger(DelvPersonOrder.class.getName()).log(Level.SEVERE,null, ex);
        JOptionPane.showMessageDialog(this,ex.getMessage());

        }
        
        setTitle(orderId);
        setHeading(orderId);
        
        getOrderList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        statusDropdown = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        status = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        customerAddress = new javax.swing.JTextArea();
        heading = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        restaurantAddress = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderList = new javax.swing.JTable();
        back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        statusDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "out for delivery", "delivered" }));
        statusDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusDropdownActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Status:");

        status.setText("status");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Customer Address:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Restaurant Address:");

        customerAddress.setEditable(false);
        customerAddress.setColumns(20);
        customerAddress.setRows(1);
        jScrollPane3.setViewportView(customerAddress);

        heading.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        heading.setForeground(new java.awt.Color(51, 153, 255));
        heading.setText("ORDER ID");

        restaurantAddress.setEditable(false);
        restaurantAddress.setColumns(20);
        restaurantAddress.setRows(1);
        jScrollPane4.setViewportView(restaurantAddress);

        orderList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Qty"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderList.setColumnSelectionAllowed(true);
        orderList.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(orderList);
        orderList.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (orderList.getColumnModel().getColumnCount() > 0) {
            orderList.getColumnModel().getColumn(0).setResizable(false);
            orderList.getColumnModel().getColumn(1).setResizable(false);
        }

        back.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(back, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel2)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(18, 18, 18))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel1)
                                            .addGap(29, 29, 29)))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(status)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(statusDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addComponent(heading)))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(heading)
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(statusDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(status))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(back))
                    .addComponent(jLabel3))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        this.dispose();
        DelvPerson dp = new DelvPerson(d_Id);
        dp.setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    private void statusDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusDropdownActionPerformed
        // TODO add your handling code here:
        try{
            
            String statusVal = (String)statusDropdown.getSelectedItem();
            
            if(statusVal.equals("delivered")){
                String updateStatusQuery = "UPDATE orders set status='"+statusVal+"',Delv_time=SYSTIMESTAMP where order_id="+"'"+orderId+"'";
                System.out.println(updateStatusQuery);
                st=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                st.executeQuery(updateStatusQuery);
                
                String updatefreeQuery = "UPDATE delivery_person set free=0 where d_id='"+d_Id+"'";
                System.out.println(updatefreeQuery);
                st=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                st.executeQuery(updatefreeQuery);
                
                //refreshing page
                dispose();
                DelvPersonOrder delvp=new DelvPersonOrder(prevframe, orderId, d_Id);
                delvp.setVisible(true);
                
            }
            
            
        }catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_statusDropdownActionPerformed
    
    private void setHeading(String orderId) {
        heading.setText("ORDER ID: "+orderId);
    }
    
    private void getOrderList(){
        try {
            
            String getCustAddress="Select block_num,street,area,pincode from address a, orders o where o.cust_id=a.cust_id and o.order_id='"+orderId+"'";
            ps=con.prepareStatement(getCustAddress);
            rs=ps.executeQuery();
            if(rs.next()){
                String custAddressVal=rs.getString(1)+", "+rs.getString(2)+", "+rs.getString(3)+", "+rs.getString(4);
                System.out.println(custAddressVal);
                customerAddress.setText(custAddressVal);
                
            }
            
            String getRestAddress="Select block_num,street,area,pincode from restaurants r, orders o where o.rest_id=r.restaurant_id and o.order_id='"+orderId+"'";
            ps=con.prepareStatement(getRestAddress);
            rs=ps.executeQuery();
            if(rs.next()){
                String restAddressVal=rs.getString(1)+", "+rs.getString(2)+", "+rs.getString(3)+", "+rs.getString(4);
                restaurantAddress.setText(restAddressVal);
                System.out.println(restAddressVal);
                
            }
            
            
            String ordersQuery = "SELECT i.item_name, o.qty FROM order_list o, items i WHERE i.item_id=o.item_id AND order_id='"+orderId+"'";
            System.out.println(ordersQuery);
            st=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);

            rs=st.executeQuery(ordersQuery);
            
            
            
            while(rs.next()) {
                
                //.out.println(rs.getString(1));
                DefaultTableModel tblModel = (DefaultTableModel)orderList.getModel();
                System.out.println(rs.getString(1)+rs.getString(2));
                tblModel.addRow(new Object[] {rs.getString(1),rs.getString(2)});

            }
            
            String statusQuery = "SELECT status FROM orders WHERE order_id='"+orderId+"'";
            System.out.println(statusQuery);
            st=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);

            rs=st.executeQuery(statusQuery);
            
            if (rs.next()){
                
                System.out.println(rs.getString(1));
                String statusVal=rs.getString(1);
                if(statusVal.equals("out for delivery")){
                    status.setVisible(false);
                    statusDropdown.setVisible(true);
                    statusDropdown.setSelectedItem(statusVal);
                }
                else{
                    
                    statusDropdown.setVisible(false);
                    status.setVisible(true);
                    status.setText(statusVal);
                }
               
            }
            
        }catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DelvPersonOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DelvPersonOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DelvPersonOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DelvPersonOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DelvPersonOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JTextArea customerAddress;
    private javax.swing.JLabel heading;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable orderList;
    private javax.swing.JTextArea restaurantAddress;
    private javax.swing.JLabel status;
    private javax.swing.JComboBox<String> statusDropdown;
    // End of variables declaration//GEN-END:variables
}
