/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.food_delivery;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/**
 *
 * @author karpa
 */
public class CardPaymentFrame extends javax.swing.JFrame {
    private String paymentType;
    Connection con;
    Statement st;
    PreparedStatement ps;
    ResultSet rs;
    Customer cusFrame;
    
    private java.util.List<String[]> cartItems = new ArrayList<>();
    String custID;
    String restID;
    String dID;
    String orderID;
    PaymentFrame prevFrame;
    /**
     * Creates new form CardPaymentFrame
     */
    public CardPaymentFrame(){
        initComponents();
    }
    
    public CardPaymentFrame(String paymentType, java.util.List<String[]> cartItems, String custID, String restID, String dID, Customer cusFrame, PaymentFrame prevFrame) {
        this.paymentType = paymentType;
        this.cartItems = cartItems;
        this.custID = custID;
        this.restID = restID;
        this.dID = dID;
        this.cusFrame = cusFrame;
        this.prevFrame = prevFrame;
        initComponents();
        try{
            Class.forName("oracle.jdbc.OracleDriver");
            //JOptionPane.showMessageDialog(this,"Driver Loaded!");
            try 
            {
                //con = DriverManager.getConnection("jdbc:oracle:thin:@10.6.4.33:1521:orcl",
                //        "cse1054","ssn");
                con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:orcl",
                        "user","pwd!");
                //JOptionPane.showMessageDialog(this,"Connected to Oracle database!");
            }
            catch (SQLException ex) 
            {
                Logger.getLogger(Customer.class.getName()).log(Level.SEVERE,null, ex);
                JOptionPane.showMessageDialog(this,ex.getMessage());
            }
        }
        catch(ClassNotFoundException ex){
        Logger.getLogger(Customer.class.getName()).log(Level.SEVERE,null, ex);
        JOptionPane.showMessageDialog(this,ex.getMessage());

        }
    }
    
    @SuppressWarnings("unchecked")
     

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cardNumberField = new javax.swing.JTextField();
        cvvField = new javax.swing.JTextField();
        otpField = new javax.swing.JTextField();
        submitButton = new javax.swing.JButton();
        back = new javax.swing.JButton();
        otpLabel = new javax.swing.JLabel();
        cardlabel = new javax.swing.JLabel();
        cvvlabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        otpField.setVisible(false); // Initially hidden

        otpLabel.setVisible(false);

        submitButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        back.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        otpLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        otpLabel.setText("Enter OTP : ");

        cardlabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cardlabel.setText("Card number");

        cvvlabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cvvlabel.setText("CVV");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cardlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(cvvlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(otpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(96, 96, 96)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(otpField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cardNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cvvField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(submitButton)
                        .addGap(136, 136, 136)
                        .addComponent(back)))
                .addContainerGap(156, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cardNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cardlabel))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cvvField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cvvlabel))
                        .addGap(39, 39, 39)
                        .addComponent(otpField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(otpLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitButton)
                    .addComponent(back))
                .addGap(86, 86, 86))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        if (!otpField.isVisible()) {
            // If OTP field is not visible, show it
            cardNumberField.setVisible(false);
            cvvField.setVisible(false);
            cvvlabel.setVisible(false);
            cardlabel.setVisible(false);
            otpField.setVisible(true);
            otpLabel.setVisible(true);
            JOptionPane.showMessageDialog(this, "Please enter the OTP sent to your registered mobile number.");
            insert();
        } else {
            // Handle OTP submission
            JOptionPane.showMessageDialog(this, "Order placed successfully!");
            this.setVisible(false);
            cusFrame.setVisible(true); // Go back to menu or initial frame
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        this.dispose();
        prevFrame.setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    public void insert() {
    PreparedStatement psOrder = null;
    PreparedStatement psOrderList = null;
    PreparedStatement psOrderId = null;
    PreparedStatement psPayment = null;
    PreparedStatement psTransactionId = null;
    PreparedStatement psGetItemId = null;
    String transactionId = null;
    String orderID = null;

    try {
        con.setAutoCommit(false); // Start transaction

        // Get the next sequence value for Order_id
        String getOrderSeqSQL = "SELECT 'O' || LPAD(order_seq.NEXTVAL, 5, '0') FROM dual";
        psOrderId = con.prepareStatement(getOrderSeqSQL);
        ResultSet rs = psOrderId.executeQuery();
        if (rs.next()) {
            orderID = rs.getString(1);
        }
        rs.close();
        psOrderId.close();

        if (!paymentType.equalsIgnoreCase("cod")) {
            String getTransactionSeqSQL = "SELECT 'TXN' || LPAD(transaction_seq.NEXTVAL, 5, '0') FROM dual";
            psTransactionId = con.prepareStatement(getTransactionSeqSQL);
            ResultSet rsTxn = psTransactionId.executeQuery();
            if (rsTxn.next()) {
                transactionId = rsTxn.getString(1);
            }
            rsTxn.close();
            psTransactionId.close();
        }

        // Insert into Orders table
        String insertOrdersSQL = "INSERT INTO Orders (Order_id, Cust_id, Rest_id, D_id, Order_time, Status, Payment) VALUES (?, ?, ?, ?, SYSTIMESTAMP, ?, ?)";
        psOrder = con.prepareStatement(insertOrdersSQL);
        psOrder.setString(1, orderID); // Order_id
        psOrder.setString(2, custID);
        psOrder.setString(3, restID);
        psOrder.setString(4, dID);
        psOrder.setString(5, "received");
        psOrder.setString(6, "paid");
        psOrder.executeUpdate();

        // Prepare statement to get Item_id from Item_name
        String getItemIdSQL = "SELECT Item_id FROM Items WHERE Item_name = ?";
        psGetItemId = con.prepareStatement(getItemIdSQL);

        // Insert into Order_list table for each item in cartItems
        String insertOrderListSQL = "INSERT INTO Order_list (Order_id, Item_id, Qty) VALUES (?, ?, ?)";
        psOrderList = con.prepareStatement(insertOrderListSQL);

        for (String[] item : cartItems) {
            String itemName = item[0]; // Assuming Item_name is the first element in item array
            int qty = Integer.parseInt(item[2]); // Assuming Qty is the second element in item array
            System.out.println(qty);
            // Get Item_id from Item_name
            psGetItemId.setString(1, itemName);
            ResultSet rsItem = psGetItemId.executeQuery();
            String itemId = null;
            if (rsItem.next()) {
                itemId = rsItem.getString("Item_id");
            }
            rsItem.close();

            if (itemId == null) {
                throw new SQLException("Item_id not found for item name: " + itemName);
            }

            // Set parameters for the prepared statement
            psOrderList.setString(1, orderID); // Order_id
            psOrderList.setString(2, itemId); // Item_id
            psOrderList.setInt(3, qty); // Qty

            // Execute the insert statement for Order_list
            psOrderList.executeUpdate();
        }

        // Insert into Payment table
        String sqlPayment = "INSERT INTO Payment (Order_id, Method, Status, Transaction_id) VALUES (?, ?, ?, ?)";
        psPayment = con.prepareStatement(sqlPayment);
        psPayment.setString(1, orderID);
        psPayment.setString(2, paymentType);
        psPayment.setString(3, "successful");
        if (transactionId != null) {
            psPayment.setString(4, transactionId);
        } else {
            psPayment.setNull(4, java.sql.Types.VARCHAR);
        }
        psPayment.executeUpdate();

        con.commit(); // Commit transaction

    } catch (SQLException ex) {
        if (con != null) {
            try {
                con.rollback(); // Rollback transaction on error
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
        Logger.getLogger(PaymentFrame.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, ex.getMessage());
    } finally {
        try {
            if (psOrder != null) psOrder.close();
            if (psOrderList != null) psOrderList.close();
            if (psOrderId != null) psOrderId.close();
            if (psPayment != null) psPayment.close();
            if (psTransactionId != null) psTransactionId.close();
            if (psGetItemId != null) psGetItemId.close();
            if (con != null) con.setAutoCommit(true); // Reset autocommit mode
        } catch (SQLException ex) {
            Logger.getLogger(PaymentFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
        }
    }
}

    
   
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CardPaymentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CardPaymentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CardPaymentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CardPaymentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CardPaymentFrame().setVisible(true);
            }
        });
    }
    
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JTextField cardNumberField;
    private javax.swing.JLabel cardlabel;
    private javax.swing.JTextField cvvField;
    private javax.swing.JLabel cvvlabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField otpField;
    private javax.swing.JLabel otpLabel;
    private javax.swing.JButton submitButton;
    // End of variables declaration//GEN-END:variables
}
